# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
   
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

    - name: Generate Maven Site
      run: mvn site

    - name: Copy site output to docs/site and docs/doxygen folder to docs/doxygen
      run: |
        mkdir -p docs
        mkdir -p docs/site
        mkdir -p docs/doxygen
        cp -r target/site/* docs/site/
        cp -r target/doxygen/* docs/doxygen/

    - name: Commit and push docs
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add -f docs
        git commit -m "Update Maven site [CI skip]" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
